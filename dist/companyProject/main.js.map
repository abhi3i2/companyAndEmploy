{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/company-details/company-details.component.css","webpack:///./src/app/company-details/company-details.component.html","webpack:///./src/app/company-details/company-details.component.ts","webpack:///./src/app/company-service.service.ts","webpack:///./src/app/company-update/company-update.component.css","webpack:///./src/app/company-update/company-update.component.html","webpack:///./src/app/company-update/company-update.component.ts","webpack:///./src/app/company/company.component.css","webpack:///./src/app/company/company.component.html","webpack:///./src/app/company/company.component.ts","webpack:///./src/app/employee-details/employee-details.component.css","webpack:///./src/app/employee-details/employee-details.component.html","webpack:///./src/app/employee-details/employee-details.component.ts","webpack:///./src/app/employee-service.service.ts","webpack:///./src/app/employee-update/employee-update.component.css","webpack:///./src/app/employee-update/employee-update.component.html","webpack:///./src/app/employee-update/employee-update.component.ts","webpack:///./src/app/employee/employee.component.css","webpack:///./src/app/employee/employee.component.html","webpack:///./src/app/employee/employee.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!doctype html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <!-- Required meta tags -->\\n    <meta charset=\\\"utf-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\">\\n\\n    <!-- Bootstrap CSS -->\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\\\" integrity=\\\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\\\" crossorigin=\\\"anonymous\\\">\\n\\n    <title>Company Project</title>\\n  </head>\\n  <body>\\n   <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Company Project</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          Company\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"company\\\">Company</a>\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"companyDetails\\\">Company Details</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n         Employee\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"employee\\\">Employee</a>\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"employeeDetails\\\">Employee Details</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</nav>\\n\\n     </body>\\n</html>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'companyProject';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgModel } from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule }  from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { CompanyComponent } from './company/company.component';\nimport { CompanyDetailsComponent } from './company-details/company-details.component';\n\n//these are custom service file\nimport { CompanyServiceService } from './company-service.service';\nimport { HomeComponent } from './home/home.component';\nimport { CompanyUpdateComponent } from './company-update/company-update.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { EmployeeUpdateComponent } from './employee-update/employee-update.component';\nimport { EmployeeServiceService } from './employee-service.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CompanyComponent,\n    CompanyDetailsComponent,\n    CompanyUpdateComponent,\n    EmployeeComponent,\n    EmployeeDetailsComponent,\n    EmployeeUpdateComponent\n  ],\t\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [ CompanyServiceService,EmployeeServiceService  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { CompanyDetailsComponent } from './company-details/company-details.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CompanyUpdateComponent } from './company-update/company-update.component';\r\nimport { EmployeeComponent } from './employee/employee.component';\r\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\r\nimport { EmployeeUpdateComponent } from './employee-update/employee-update.component';\r\n\r\n\r\n\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'company', component: CompanyComponent },\r\n  { path: 'companyDetails', component: CompanyDetailsComponent },\r\n  { path: 'companyUpdate', component:CompanyUpdateComponent},\r\n  { path: 'employee', component:EmployeeComponent},\r\n  { path: 'employeeDetails', component:EmployeeDetailsComponent},\r\n  { path: 'employeeUpdate', component:EmployeeUpdateComponent}\r\n  //{ path: '/company/comapnyDetails', component:CompanyDetailsComponent}\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],  \r\n  declarations: []\r\n})\r\n\r\n\r\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div style=\\\"float:right;margin-bottom: 10px;margin-top: 10px;\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"addCompany()\\\">Add Company</button>\\n  </div>\\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n      <tr>\\n        <th>#Id</th>\\n        <th>Company ID</th>\\n        <th>Company Name</th>\\n        <th>Company Adress</th>\\n        <th>Company Type</th>\\n        <th scope=\\\"col\\\">Update Company</th>\\n        <th scope=\\\"col\\\">Delete Company</th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let company of CompanyList; let i = index\\\">\\n        <td>{{i+1}}</td>\\n        <td>{{company.company_id}}</td>\\n        <td>{{company.company_name}}</td>\\n        <td>{{company.company_adress}}</td>\\n        <td>{{company.company_type}}</td>\\n       <td style=\\\"text-align: center\\\"><button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateCompany(company)\\\">Update</button></td>\\n        <td style=\\\"text-align: center\\\"><button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteCompany(i,company)\\\">Delete</button></td>\\n\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from '../app.routing';\nimport { CompanyServiceService } from '../company-service.service';\n\n\n@Component({\n  selector: 'app-company-details',\n  templateUrl: './company-details.component.html',\n  styleUrls: ['./company-details.component.css']\n})\nexport class CompanyDetailsComponent implements OnInit {\n\n  CompanyList = [];\n\n  constructor(private _router: Router, private companyService: CompanyServiceService) { }\n\n\n  addCompany() {\n\n    this._router.navigate(['company']);\n  }\n\n\n  updateCompany(company) {\n    console.log(company);\n    this.companyService.setFormData(company);\n    this._router.navigate(['/companyUpdate']);\n  }\n  \n  deleteCompany(i,company) {\n    let id = company._id;\n    this.companyService.deleteCompany(id).subscribe((data)=>{\n      console.log(\"data from ts\")\n      console.log(data);\n      if(data){\n        this.CompanyList.splice(i,1);\n    }\n    })\n\n  }\n\n  ngOnInit() {\n    this.companyService.fetchCompanyDetails().subscribe((data) => {\n      console.log(data);\n      if (data && data.length > 0) {\n        this.CompanyList = data;\n      }\n    });\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyServiceService {\n\n  constructor(private _http: Http) { }\n\n  formData = {};\n  saveNewCompany(parameter) {\n    console.log(parameter)\n    return this._http.post('/company/saveNewCompany', parameter).map(function (data) {\n      let newData = data.json();\n      if (newData.success) {\n        return newData.data\n       \n      } else {\n        return false;\n      }\n    });\n  }\n\n  fetchCompanyDetails() {\n    return this._http.get('/company/completeCompanyDetails').map(function (data) {\n      var newData = data.json();\n      if (newData.success) {\n        return newData.data;\n      }\n    });\n  }\n\n  deleteCompany(id) {\n    return this._http.post('/company/deleteOneCompany',{params:id}).map(function (data) {\n      let newData = data.json();\n      console.log(\"this is service file \")\n       console.log(newData)\n      if (newData.success) {\n        return newData.companyData;\n      }\n    });\n  }\n\n  updateCompany(parameter) {\n    return this._http.post('/company/updateOneCompany',parameter).map(function (data) {\n      var newData = data.json();\n      if (newData) {\n        return newData.data;\n      }\n    });\n  }\n\n  setFormData(parameter){\n    console.log(parameter);\n    this.formData =parameter;\n  }\n  getFormData(){\n    return this.formData;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n    <form name=\\\"companyForm\\\" style=\\\"margin-top: 30px;\\\">\\n  \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"companyId\\\">Company Id :</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyId\\\" name=\\\"companyId\\\" [(ngModel)]=\\\"companyDetails.company_id\\\"\\n          placeholder=\\\"Company Id\\\">\\n      </div>\\n  \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"companyName\\\">Company Name :</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyName\\\" name=\\\"companyName\\\" [(ngModel)]=\\\"companyDetails.company_name\\\"\\n          placeholder=\\\"Company Name\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"companyType\\\">Company Type :</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyType\\\" name=\\\"companyType\\\" [(ngModel)]=\\\"companyDetails.company_type\\\"\\n          placeholder=\\\"Company Type\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"companyAdress\\\">Company Address :</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyAdress\\\" name=\\\"companyAdress\\\" [(ngModel)]=\\\"companyDetails.company_adress\\\"\\n          placeholder=\\\"Company Adress\\\">\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"float: right\\\" (click)=\\\"updateCompany()\\\">Update</button>\\n    </form>\\n  \\n  </div>\\n  \\n  <router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { CompanyServiceService } from '../company-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-company-update',\n  templateUrl: './company-update.component.html',\n  styleUrls: ['./company-update.component.css']\n})\nexport class CompanyUpdateComponent implements OnInit {\n\n  companyDetails = {};\n  constructor(private _companyService:CompanyServiceService,private _router:Router) { }\n\n\n  updateCompany(){\n    console.log(this.companyDetails);\n    this._companyService.updateCompany(this.companyDetails).subscribe((data)=>{\n      console.log(data);\n      if(data){\n        this._router.navigate(['companyDetails']);\n      }\n    })\n  }\n  ngOnInit() {\n    this.companyDetails = this._companyService.getFormData();\n    console.log(this.companyDetails);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <form name=\\\"companyForm\\\" style=\\\"margin-top: 30px;\\\">\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"companyId\\\">Company Id :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyId\\\" name=\\\"companyId\\\" [(ngModel)]=\\\"formRecord.companyId\\\"\\n        placeholder=\\\"Company Name\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"companyName\\\">Company Name :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyName\\\" name=\\\"companyName\\\" [(ngModel)]=\\\"formRecord.companyName\\\"\\n        placeholder=\\\"Company Name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"companyType\\\">Company Type :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyType\\\" name=\\\"companyType\\\" [(ngModel)]=\\\"formRecord.companyType\\\"\\n        placeholder=\\\"Company Type\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"companyAdress\\\">Company Address :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyAdress\\\" name=\\\"companyAdress\\\" [(ngModel)]=\\\"formRecord.companyAdress\\\"\\n        placeholder=\\\"Company Adress\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"float: right\\\" (click)=\\\"saveCompany()\\\">Submit</button>\\n  </form>\\n\\n</div>\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormsModule, FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { AppRoutingModule } from '../app.routing';\nimport { CompanyServiceService } from '../company-service.service';\nimport { CompanyDetailsComponent } from '../company-details/company-details.component';\n\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent implements OnInit {\n\n  formRecord = {};\n\n  constructor(private _companyService : CompanyServiceService, private _router:Router, private myroute:ActivatedRoute) { }\n\n  saveCompany(){\n    console.log(\"this is formData\");\n   // console.log(this.formRecord);\n\n    this._companyService.saveNewCompany(this.formRecord).subscribe((data) =>{\n     \n       if(data){\n       // console.log(data + \" tt\")\n      //this._router.navigateByUrl('companyDetails');\n      this._router.navigate(['/companyDetails']);\n      \n       }\n    });\n    \n  }\n\n\n  ngOnInit() {\n  }\n\n}\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div style=\\\"float:right;margin-bottom: 10px;margin-top: 10px;\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"addEmployee()\\\">Add Employee</button>\\n  </div>\\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n      <tr>\\n        <th>#Id</th>\\n        <th>Employee ID</th>\\n        <th>Employee Name</th>\\n        <th>Employee Adress</th>\\n        <th>Employee Type</th>\\n        <th scope=\\\"col\\\">Update Employee</th>\\n        <th scope=\\\"col\\\">Delete Employee</th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let employee of EmployeeList; let i = index\\\">\\n        <td>{{i+1}}</td>\\n        <td>{{employee.employee_id}}</td>\\n        <td>{{employee.employee_name}}</td>\\n        <td>{{employee.employee_adress}}</td>\\n        <td>{{employee.employee_type}}</td>\\n      <td style=\\\"text-align: center\\\"><button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateEmployee(employee)\\\">Update</button></td>\\n      <td style=\\\"text-align: center\\\"><button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteEmployee(i,employee)\\\">Delete</button></td>\\n\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeServiceService } from '../employee-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.css']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  \n  EmployeeList = [];\n\n  constructor(private _router: Router, private employeeService: EmployeeServiceService) { }\n\n\n  addCompany() {\n\n    this._router.navigate(['employee']);\n  }\n\n\n  updateEmployee(employee) {\n    console.log(employee);\n    this.employeeService.setFormData(employee);\n    this._router.navigate(['/employeeUpdate']);\n  }\n  deleteEmployee(i,employee) {\n    let id = employee._id;\n    this.employeeService.deleteEmployee(id).subscribe((data)=>{\n      console.log(\"data from ts\")\n      console.log(data);\n      if(data){\n        this.EmployeeList.splice(i,1);\n    }\n    })\n\n  }\n\n  ngOnInit() {\n    this.employeeService.fetchEmployeeDetails().subscribe((data) => {\n      console.log(data);\n      if (data && data.length > 0) {\n        this.EmployeeList = data;\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeServiceService {\n\n \n  constructor(private _http: Http) { }\n\n  formData = {};\n  saveNewEmployee(parameter) {\n    console.log(parameter)\n    return this._http.post('/employee/saveNewEmployee', parameter).map(function (data) {\n      let newData = data.json();\n      if (newData.success) {\n        return newData.data\n       \n      } else {\n        return false;\n      }\n    });\n  }\n\n  fetchEmployeeDetails() {\n    return this._http.get('/employee/completeEmployeeDetails').map(function (data) {\n      var newData = data.json();\n      if (newData.success) {\n        return newData.data;\n      }\n    });\n  }\n\n  deleteEmployee(id) {\n    return this._http.post('/employee/deleteOneEmployee',{params:id}).map(function (data) {\n      let newData = data.json();\n      console.log(\"this is service file \")\n       console.log(newData)\n      if (newData.success) {\n        return newData.employeeData;\n      }\n    });\n  }\n\n  updateEmployee(parameter) {\n    return this._http.post('/employee/updateOneEmployee',parameter).map(function (data) {\n      var newData = data.json();\n      if (newData) {\n        return newData.data;\n      }\n    });\n  }\n\n  setFormData(parameter){\n    console.log(parameter);\n    this.formData =parameter;\n  }\n  getFormData(){\n    return this.formData;\n  }\n}\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <form name=\\\"EmployeeForm\\\" style=\\\"margin-top: 30px;\\\">\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"employeeId\\\">Employee Id :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employeeId\\\" name=\\\"employeeId\\\" [(ngModel)]=\\\"employeeDetails.employee_id\\\"\\n        placeholder=\\\"Employee Id\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"employeeName\\\">Employee Name :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employeeName\\\" name=\\\"employeeName\\\" [(ngModel)]=\\\"employeeDetails.employee_name\\\"\\n        placeholder=\\\"Employee Name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"employeeType\\\">Employee Type :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employeeType\\\" name=\\\"employeeType\\\" [(ngModel)]=\\\"employeeDetails.employee_type\\\"\\n        placeholder=\\\"Employee Type\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"employeeAdress\\\">Employee Address :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employeeAdress\\\" name=\\\"employeeAdress\\\" [(ngModel)]=\\\"employeeDetails.employee_adress\\\"\\n        placeholder=\\\"Employee Adress\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"float: right\\\" (click)=\\\"updateEmployee()\\\">Update</button>\\n  </form>\\n\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeServiceService } from '../employee-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-update',\n  templateUrl: './employee-update.component.html',\n  styleUrls: ['./employee-update.component.css']\n})\nexport class EmployeeUpdateComponent implements OnInit {\n  \n    employeeDetails = {};\n    constructor(private _employeeService:EmployeeServiceService,private _router:Router) { }\n  \n  \n    updateEmployee(){\n      console.log(this.employeeDetails);\n      this._employeeService.updateEmployee(this.employeeDetails).subscribe((data)=>{\n        console.log(data);\n        if(data){\n          this._router.navigate(['employeeDetails']);\n        }\n      })\n    }\n    ngOnInit() {\n      this.employeeDetails = this._employeeService.getFormData();\n      console.log(this.employeeDetails);\n    }\n  \n  }\n  \n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <form name=\\\"employeeForm\\\" style=\\\"margin-top: 30px;\\\">\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"employeeId\\\">Employee Id :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employeeId\\\" name=\\\"employeeId\\\" [(ngModel)]=\\\"formRecord.employeeId\\\"\\n        placeholder=\\\"Employee Name\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"employeeName\\\">Employee Name :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employeeName\\\" name=\\\"employeeName\\\" [(ngModel)]=\\\"formRecord.employeeName\\\"\\n        placeholder=\\\"Employee Name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"employeeType\\\">Employee Type :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employeeType\\\" name=\\\"employeeType\\\" [(ngModel)]=\\\"formRecord.employeeType\\\"\\n        placeholder=\\\"Employee Type\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"employeeAdress\\\">Employee Address :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employeeAdress\\\" name=\\\"employeeAdress\\\" [(ngModel)]=\\\"formRecord.employeeAdress\\\"\\n        placeholder=\\\"Employee Adress\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"float: right\\\" (click)=\\\"saveEmployee()\\\">Submit</button>\\n  </form>\\n\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormsModule, FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { AppRoutingModule } from '../app.routing';\nimport { EmployeeServiceService } from '../employee-service.service';\nimport { EmployeeDetailsComponent } from '../employee-details/employee-details.component';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  formRecord = {};\n\n  constructor(private _companyService : EmployeeServiceService, private _router:Router, private myroute:ActivatedRoute) { }\n\n  saveEmployee(){\n    console.log(\"this is formData\");\n   // console.log(this.formRecord);\n\n    this._companyService.saveNewEmployee(this.formRecord).subscribe((data) =>{\n     \n       if(data){\n       // console.log(data + \" tt\")\n      //this._router.navigateByUrl('companyDetails');\n      this._router.navigate(['/employeeDetails']);\n      \n       }\n    });\n    \n  }\n\n\n  ngOnInit() {\n  }\n\n}\n\n","module.exports = \"\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}